spring:
  application:
    name: marry1q-be
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never

server:
  port: 8080

# JWT 설정
jwt:
  secret: ${JWT_SECRET}
  access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:2592000}  # 30일 (초)
  refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:5184000} # 60일 (초)

# 외부 API 설정
external-api:
  auth-backend:
    url: ${AUTH_BACKEND_URL}
    client-id: ${AUTH_BACKEND_CLIENT_ID}
    client-secret: ${AUTH_BACKEND_CLIENT_SECRET}
    endpoints:
      token: /oauth/2.0/token
      withdraw-transfer: /v2.0/transfer/withdraw/acnt_num
      deposit-transfer: /v2.0/transfer/deposit/acnt_num
      account-balance: /v2.0/account/balance/acnt_num
      account-info: /v2.0/accountinfo/num_list
      account-holder-name: /v2.0/account/holder-name
      user-register: /v2.0/user/register
  
  hana-bank:
    url: ${HANA_BANK_URL}
    timeout: ${HANA_BANK_TIMEOUT_MS:10000}  # 10초
    endpoints:
      balance: /api/v1/accounts/balance
      transfer: /api/v1/accounts/transfer
      products: /api/v1/products
      product-detail: /api/v1/products/{productId}
      categories: /api/v1/categories
      auto-transfer-create: /api/v1/auto-transfers
      auto-transfer-list: /api/v1/auto-transfers/list
      auto-transfer-detail: /api/v1/auto-transfers/{autoTransferId}
      auto-transfer-update: /api/v1/auto-transfers/{autoTransferId}
      auto-transfer-delete: /api/v1/auto-transfers/{autoTransferId}
      auto-transfer-incoming: /api/v1/auto-transfers/incoming
  
  gemini-ai:
    url: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite:generateContent
    api-key: ${GEMINI_API_KEY}

# CORS 설정
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}

# AWS S3 설정 (로컬 개발용)
aws:
  s3:
    access-key: ${AWS_S3_ACCESS_KEY}
    secret-key: ${AWS_S3_SECRET_KEY}
    region: ${AWS_S3_REGION:ap-northeast-2}
    bucket-name: ${AWS_S3_BUCKET}

# Swagger 설정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    try-it-out-enabled: true
    display-request-duration: true
    doc-expansion: list
    filter: true
    supported-submit-methods: ["get", "post", "put", "delete", "patch"]
  api-docs:
    path: /api-docs

# 로깅 설정
logging:
  level:
    root: INFO
    com.marry1q.marry1qbe: DEBUG
    org.springframework.security: INFO
